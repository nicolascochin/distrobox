#!/usr/bin/env bash

set -e

# Valeurs par d√©faut
NAME=""
PACKAGES_TO_INSTALL=(
  git
  gcc
  gettext # for envsubst
)
IMAGE=""
HOST_HOME="$HOME"
INSTALL_DOCKER=false
MOUNT_PODMAN=false
MOUNT_DOCKER=false
CREATE_ARGS=()
ROOT_MODE=false

ENTER_SCRIPT() {
  bash <(curl -fsSL https://raw.githubusercontent.com/nicolascochin/distrobox/main/enter) "$@"
}

# Parsing des arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
  --name)
    NAME="$2"
    shift 2
    ;;
  --image)
    IMAGE="$2"
    shift 2
    ;;
  --package)
    PACKAGES_TO_INSTALL+=("$2")
    shift 2
    ;;
  --docker)
    INSTALL_DOCKER=true
    ROOT_MODE=true
    shift
    ;;
  --host-podman)
    MOUNT_PODMAN=true
    shift
    ;;
  --host-docker)
    MOUNT_DOCKER=true
    shift
    ;;
  --root)
    ROOT_MODE=true
    shift
    ;;
  --host_home)
    HOST_HOME="$2"
    shift 2
    ;;
  *)
    # echo "Unkown option: $1"
    # exit 1
    CREATE_ARGS+=($1)
    shift
    ;;
  esac
done

ROOT=$([[ $ROOT_MODE == true ]] && echo "--root" || echo "")

test -z "$NAME" && read -p "Enter a distrobox name: " NAME
test -z "$NAME" && echo "Error: No name was given" && exit 1

test -z "$IMAGE" && read -p "Enter an image: " IMAGE
test -z "$IMAGE" && echo "Error: no image was given" && exit 1

CUSTOM_HOME="$HOST_HOME/Distroboxes/$NAME"
mkdir -p "$CUSTOM_HOME"

# Setup arguments for creation
CREATE_ARGS+=(--home "$CUSTOM_HOME")
CREATE_ARGS+=(--name "$NAME")
CREATE_ARGS+=(--image "$IMAGE")
test -d "$HOST_HOME/Workspace" && CREATE_ARGS+=(--volume "$HOST_HOME/Workspace:$CUSTOM_HOME/Workspace:rw")
test -d "$HOST_HOME/.ssh" && CREATE_ARGS+=(--volume "$HOST_HOME/.ssh:$CUSTOM_HOME/.ssh:ro")

if [[ $INSTALL_DOCKER == true ]]; then
  CREATE_ARGS+=(--init)
  CREATE_ARGS+=(--unshare-all)
  PACKAGES_TO_INSTALL+=(systemd)
fi

CREATE_ARGS+=(--additional-packages "${PACKAGES_TO_INSTALL[*]}")

# Create the distro
distrobox create $ROOT "${CREATE_ARGS[@]}"

#####
# Setup the distrobox
#####
ZSH= ENTER_SCRIPT $NAME $ROOT -- bash -c 'bash <(curl -fsSL https://raw.githubusercontent.com/nicolascochin/setup_env/main/setup) --shell --neovim'

if [[ $MOUNT_PODMAN == true ]]; then
  echo "mount podman"
  ENTER_SCRIPT $NAME $ROOT -- bash -c 'sudo ln -s /usr/bin/distrobox-host-exec /usr/local/bin/podman'
  ENTER_SCRIPT $NAME $ROOT -- bash -c 'sudo ln -s /usr/bin/distrobox-host-exec /usr/local/bin/podman-compose'
fi

[[ $MOUNT_DOCKER == true ]] && echo "Mount docker..." && ENTER_SCRIPT $NAME $ROOT -- bash -c 'sudo ln -s /usr/bin/distrobox-host-exec /usr/local/bin/docker'

if [[ $INSTALL_DOCKER == true ]]; then
  echo "üîß Install Docker..."
  ENTER_SCRIPT $NAME $ROOT -- bash -c 'curl -fsSL https://get.docker.com | sh'
  ENTER_SCRIPT $NAME $ROOT -- bash -c 'sudo systemctl enable docker.service'
  ENTER_SCRIPT $NAME $ROOT -- bash -c 'sudo systemctl start docker.service'
  ENTER_SCRIPT $NAME $ROOT -- bash -c 'sudo usermod -aG docker $USER'
fi
echo "‚úÖ Distrobox '$NAME' cr√©√©e avec succ√®s."
